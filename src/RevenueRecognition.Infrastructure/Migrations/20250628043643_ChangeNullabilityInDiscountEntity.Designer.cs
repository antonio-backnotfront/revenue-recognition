// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevenueRecognition.Infrastructure.DAL;

#nullable disable

namespace RevenueRecognition.Infrastructure.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20250628043643_ChangeNullabilityInDiscountEntity")]
    partial class ChangeNullabilityInDiscountEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevenueRecognition.Models.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "admin123",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Login = "user",
                            Password = "user123",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsLoyal")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Email = "company@example.com",
                            IsLoyal = true,
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Email = "individual@example.com",
                            IsLoyal = false,
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.CompanyClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("CompanyClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            KRS = "1234567890",
                            Name = "Example Corp"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.IndividualClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("IndividualClient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 2,
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe",
                            PESEL = "12345678901"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContractStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("SoftwareVersionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearsOfSupport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContractStatusId");

                    b.HasIndex("SoftwareVersionId");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            ContractStatusId = 2,
                            EndDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Paid = 500m,
                            Price = 1000m,
                            SoftwareVersionId = 1,
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 1
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 300m,
                            ContractId = 1,
                            PaidAt = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200m,
                            ContractId = 1,
                            PaidAt = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("ContractStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Paid"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cancelled"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractUpdateType", b =>
                {
                    b.Property<int>("UpdateTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.HasKey("UpdateTypeId", "ContractId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractUpdateType");

                    b.HasData(
                        new
                        {
                            UpdateTypeId = 1,
                            ContractId = 1
                        },
                        new
                        {
                            UpdateTypeId = 2,
                            ContractId = 1
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.DiscountContract", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId", "ContractId");

                    b.HasIndex("ContractId");

                    b.ToTable("DiscountContract");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            ContractId = 1
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.UpdateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UpdateType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bug Fix"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Feature"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Discount.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("Id");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Loyal Customer Discount",
                            Value = 5m
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2024, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Year Sale",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 10m
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Black Friday",
                            StartDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = 20m
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Productivity"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Entertainment"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("CurrentVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Software");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Cost = 99.99m,
                            CurrentVersionId = 1,
                            Description = "Task manager",
                            Name = "SuperProductivity"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Cost = 49.99m,
                            CurrentVersionId = 2,
                            Description = "Casual game",
                            Name = "FunGame"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.SoftwareVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareId");

                    b.ToTable("SoftwareVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "v1.0 release",
                            ReleaseDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 1,
                            VersionNumber = "1.0"
                        },
                        new
                        {
                            Id = 2,
                            Description = "v1.0 release",
                            ReleaseDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareId = 2,
                            VersionNumber = "1.0"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.DiscountSubscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId", "DiscountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("DiscountSubscription");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            DiscountId = 2
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.RenewalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("RenewalPeriod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yearly"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RenewalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RenewalPeriodId");

                    b.HasIndex("SoftwareId");

                    b.HasIndex("SubscriptionStatusId");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 2,
                            Price = 9.99m,
                            RegisterDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RenewalPeriodId = 1,
                            SoftwareId = 1,
                            SubscriptionStatusId = 1
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.SubscriptionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionPayment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 9.99m,
                            PaidAt = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 9.99m,
                            PaidAt = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 9.99m,
                            PaidAt = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionId = 1
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.SubscriptionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Suspended"
                        });
                });

            modelBuilder.Entity("RevenueRecognition.Models.Auth.User", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Auth.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.CompanyClient", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Client.Client", "Client")
                        .WithOne("CompanyClient")
                        .HasForeignKey("RevenueRecognition.Models.Client.CompanyClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.IndividualClient", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Client.Client", "Client")
                        .WithOne("IndividualClient")
                        .HasForeignKey("RevenueRecognition.Models.Client.IndividualClient", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.Contract", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Client.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Contract.ContractStatus", "ContractStatus")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Software.SoftwareVersion", "SoftwareVersion")
                        .WithMany("Contracts")
                        .HasForeignKey("SoftwareVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ContractStatus");

                    b.Navigation("SoftwareVersion");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractPayment", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Contract.Contract", "Contract")
                        .WithMany("ContractPayments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractUpdateType", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Contract.Contract", "Contract")
                        .WithMany("ContractUpdateTypes")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Contract.UpdateType", "UpdateType")
                        .WithMany("ContractUpdateTypes")
                        .HasForeignKey("UpdateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("UpdateType");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.DiscountContract", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Contract.Contract", "Contract")
                        .WithMany("DiscountContracts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Discount.Discount", "Discount")
                        .WithMany("DiscountContracts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.Software", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Software.Category", "Category")
                        .WithMany("Softwares")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.SoftwareVersion", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Software.Software", "Software")
                        .WithMany("Versions")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Software");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.DiscountSubscription", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Discount.Discount", "Discount")
                        .WithMany("DiscountSubscriptions")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Subscription.Subscription", "Subscription")
                        .WithMany("DiscountSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.Subscription", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Client.Client", "Client")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Subscription.RenewalPeriod", "RenewalPeriod")
                        .WithMany("Subscriptions")
                        .HasForeignKey("RenewalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Software.Software", "Software")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevenueRecognition.Models.Subscription.SubscriptionStatus", "SubscriptionStatus")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriptionStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("RenewalPeriod");

                    b.Navigation("Software");

                    b.Navigation("SubscriptionStatus");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.SubscriptionPayment", b =>
                {
                    b.HasOne("RevenueRecognition.Models.Subscription.Subscription", "Subscription")
                        .WithMany("SubscriptionPayments")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Auth.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Client.Client", b =>
                {
                    b.Navigation("CompanyClient");

                    b.Navigation("Contracts");

                    b.Navigation("IndividualClient");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.Contract", b =>
                {
                    b.Navigation("ContractPayments");

                    b.Navigation("ContractUpdateTypes");

                    b.Navigation("DiscountContracts");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.ContractStatus", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Contract.UpdateType", b =>
                {
                    b.Navigation("ContractUpdateTypes");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Discount.Discount", b =>
                {
                    b.Navigation("DiscountContracts");

                    b.Navigation("DiscountSubscriptions");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.Category", b =>
                {
                    b.Navigation("Softwares");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.Software", b =>
                {
                    b.Navigation("Subscriptions");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Software.SoftwareVersion", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.RenewalPeriod", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.Subscription", b =>
                {
                    b.Navigation("DiscountSubscriptions");

                    b.Navigation("SubscriptionPayments");
                });

            modelBuilder.Entity("RevenueRecognition.Models.Subscription.SubscriptionStatus", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
